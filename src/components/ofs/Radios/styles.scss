@import "../styles.scss";

$ofs-radios-size: ofs-spacing(7);
$ofs-radios-label-padding-left-right: ofs-spacing(3);
// When the default focus width is used on a curved edge it looks visually smaller.
// So for the circular radios we bump the default to make it look visually consistent.
$ofs-radios-focus-width: $ofs-focus-width + 1px;

.ofs-radios__item {
    @include ofs-font($size: 19);

    display: block;

    position: relative;

    min-height: $ofs-radios-size;

    margin-bottom: ofs-spacing(2);
    padding: 0 0 0 $ofs-radios-size;

    clear: left;
}

.ofs-radios__item:last-child,
.ofs-radios__item:last-of-type {
    margin-bottom: 0;
}

.ofs-radios__input {
    position: absolute;

    z-index: 1;
    top: 0;
    left: 0;

    width: $ofs-radios-size;
    height: $ofs-radios-size;

    cursor: pointer;

    // IE8 doesn’t support pseudoelements, so we don’t want to hide native elements there. Double colons get ommited by IE8.
    @include ofs-not-ie8 {
    margin: 0;
    opacity: 0;
    }

    // add focus outline to input element for IE8
    @include ofs-if-ie8 {
    &:focus {
        outline: $ofs-focus-width solid $ofs-focus-colour;
    }
    }
}

.ofs-radios__label {
    display: inline-block;
    margin-bottom: 0;
    padding: 8px $ofs-radios-label-padding-left-right ofs-spacing(1);
    cursor: pointer;
    // remove 300ms pause on mobile
    -ms-touch-action: manipulation;
    touch-action: manipulation;
}

.ofs-radios__hint {
    display: block;
    padding-right: $ofs-radios-label-padding-left-right;
    padding-left: $ofs-radios-label-padding-left-right;
}

.ofs-radios__input + .ofs-radios__label::before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 0;
    left: 0;

    width: $ofs-radios-size;
    height: $ofs-radios-size;

    border: $ofs-border-width-form-element solid currentColor;
    border-radius: 50%;
    background: transparent;
}

.ofs-radios__input + .ofs-radios__label::after {
    content: "";

    position: absolute;
    top: ofs-spacing(2);
    left: ofs-spacing(2);

    width: 0;
    height: 0;

    border: ofs-spacing(2) solid currentColor;
    border-radius: 50%;
    opacity: 0;
    background: currentColor;
}

// Focused state
.ofs-radios__input:focus + .ofs-radios__label::before {
    // Since box-shadows are removed when users customise their colours
    // We set a transparent outline that is shown instead.
    // https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/
    outline: $ofs-focus-width solid transparent;
    outline-offset: $ofs-focus-width;
    box-shadow: 0 0 0 $ofs-radios-focus-width $ofs-focus-colour;
}

// Selected state
.ofs-radios__input:checked + .ofs-radios__label::after {
    opacity: 1;
}

// Disabled state
.ofs-radios__input:disabled,
.ofs-radios__input:disabled + .ofs-radios__label {
    cursor: default;
}

.ofs-radios__input:disabled + .ofs-radios__label {
    opacity: .5;
}

// Inline variant
.ofs-radios--inline {
    @include mq ($from: tablet) {
    @include ofs-clearfix;

    .ofs-radios__item {
        margin-right: ofs-spacing(4);
        float: left;
        clear: none;
    }
    }

    // Prevent inline modifier being used with conditional reveals
    &.ofs-radios--conditional {
    .ofs-radios__item {
        margin-right: 0;
        float: none;
    }
    }
}

.ofs-radios__divider {
    $ofs-divider-size: $ofs-radios-size !default;
    @include ofs-font($size: 19);
    @include ofs-text-colour;
    width: $ofs-divider-size;
    margin-bottom: ofs-spacing(2);
    text-align: center;
}

$conditional-border-width: $ofs-border-width-mobile;
// Calculate the amount of padding needed to keep the border centered against the radios.
$conditional-border-padding: ($ofs-radios-size / 2) - ($conditional-border-width / 2);
// Move the border centered with the radios
$conditional-margin-left: $conditional-border-padding;
// Move the contents of the conditional inline with the label
$conditional-padding-left: $conditional-border-padding + $ofs-radios-label-padding-left-right;

.ofs-radios__conditional {
    @include ofs-responsive-margin(4, "bottom");
    margin-left: $conditional-margin-left;
    padding-left: $conditional-padding-left;
    border-left: $conditional-border-width solid $ofs-border-colour;

    .js-enabled &--hidden {
    display: none;
    }

    & > :last-child {
    margin-bottom: 0;
    }
}
  